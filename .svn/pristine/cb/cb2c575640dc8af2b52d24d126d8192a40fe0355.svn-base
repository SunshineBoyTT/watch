package com.spring.base.websocket;

import java.util.Map;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.server.ServerHttpRequest;
import org.springframework.http.server.ServerHttpResponse;
import org.springframework.http.server.ServletServerHttpRequest;
import org.springframework.web.socket.WebSocketHandler;
import org.springframework.web.socket.server.HandshakeInterceptor;

import com.spring.base.utils.CookieUtil;

public class WebSocketHandshakeInterceptor implements HandshakeInterceptor{
	private static Logger logger = LoggerFactory.getLogger(HandshakeInterceptor.class);
    @Override
    public boolean beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, WebSocketHandler wsHandler, Map<String, Object
                > attributes) throws Exception {

        logger.info("before make handshake");
		if (request instanceof ServletServerHttpRequest) {
			ServletServerHttpRequest servletRequest = (ServletServerHttpRequest) request;
			HttpSession session = servletRequest.getServletRequest().getSession(false);
			String uid=CookieUtil.getUid(servletRequest.getServletRequest(),"uid");
			System.err.println(uid);
			if (uid != null) {
				// 使用sessionId区分WebSocketHandler，以便定向发送消息
				UserSocketVo userSocketVo = new UserSocketVo();
				userSocketVo.setSessionid(uid);
				attributes.put("websocket_username", userSocketVo);
			} else {
				logger.error("session is null,refuse connect...");
				return false;
			}
		}
		return true;
    }

    @Override
    public void afterHandshake(ServerHttpRequest request, ServerHttpResponse response, WebSocketHandler wsHandler, Exception exception) {
    	
    	  logger.error("spring websocket 链接建立成功......");

    }
}
